
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template< typename Head, typename... Tail >
State< Head, Tail... >::State( Head const& head_, std::shared_ptr< State< Tail... > > const& tail_ )
  :head( head_ ), tail( tail_ ) {}

template< typename Head, typename... Tail >
std::shared_ptr< State< Head, Tail... > > State< Head, Tail... >::make( Head const& head, std::shared_ptr< State< Tail... > > const& tail ) {
  std::shared_ptr< State< Head, Tail... > > result( new State< Head, Tail... >( head, tail ) );
  result->this_ = result;
  return result;
}


template< typename Head, typename... Tail >
auto State< Head, Tail... >::end() {
  return end_transition( this_ );
}

template< typename Head, typename... Tail >
auto State< Head, Tail... >::I() {
  return I_transition( this_ );
}

template< typename Head, typename... Tail >
auto State< Head, Tail... >::O() {
  return O_transition( this_ );
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template< typename... Stack >
auto end_transition( std::shared_ptr< State< Stack... > > const& src ) {
  return reduce( src )->end();
}

template< typename... Stack >
auto I_transition( std::shared_ptr< State< Stack... > > const& src ) {
  return reduce( src )->I();
}

template< typename... Stack >
auto O_transition( std::shared_ptr< State< Stack... > > const& src ) {
  return reduce( src )->O();
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// shift transitions

template<>
inline auto end_transition( std::shared_ptr< State< S1, S2 > > const& src ) {
  return src->head.content;
}

template< typename... Tail >
auto I_transition( std::shared_ptr< State< S2, Tail... > > const& src ) {
  return State< S12, S2, Tail... >::make( S12(), src );
}

template< typename... Tail >
auto O_transition( std::shared_ptr< State< S2, Tail... > > const& src ) {
  return State< S5, S2, Tail... >::make( S5(), src );
}


template< typename... Tail >
auto I_transition( std::shared_ptr< State< S3, Tail... > > const& src ) {
  return State< S8, S3, Tail... >::make( S8(), src );
}

template< typename... Tail >
auto O_transition( std::shared_ptr< State< S3, Tail... > > const& src ) {
  return State< S3, S3, Tail... >::make( S3(), src );
}


template< typename... Tail >
auto I_transition( std::shared_ptr< State< S4, Tail... > > const& src ) {
  return State< S8, S4, Tail... >::make( S8(), src );
}

template< typename... Tail >
auto O_transition( std::shared_ptr< State< S4, Tail... > > const& src ) {
  return State< S3, S4, Tail... >::make( S3(), src );
}


template< typename... Tail >
auto I_transition( std::shared_ptr< State< S5, Tail... > > const& src ) {
  return State< S8, S5, Tail... >::make( S8(), src );
}

template< typename... Tail >
auto O_transition( std::shared_ptr< State< S5, Tail... > > const& src ) {
  return State< S3, S5, Tail... >::make( S3(), src );
}


template< typename... Tail >
auto I_transition( std::shared_ptr< State< S8, Tail... > > const& src ) {
  return State< S14, S8, Tail... >::make( S14(), src );
}

template< typename... Tail >
auto O_transition( std::shared_ptr< State< S8, Tail... > > const& src ) {
  return State< S10, S8, Tail... >::make( S10(), src );
}


template< typename... Tail >
auto I_transition( std::shared_ptr< State< S10, Tail... > > const& src ) {
  return State< S19, S10, Tail... >::make( S19(), src );
}

template< typename... Tail >
auto O_transition( std::shared_ptr< State< S10, Tail... > > const& src ) {
  return State< S16, S10, Tail... >::make( S16(), src );
}


template< typename... Tail >
auto I_transition( std::shared_ptr< State< S11, Tail... > > const& src ) {
  return State< S14, S11, Tail... >::make( S14(), src );
}

template< typename... Tail >
auto O_transition( std::shared_ptr< State< S11, Tail... > > const& src ) {
  return State< S10, S11, Tail... >::make( S10(), src );
}


template< typename... Tail >
auto I_transition( std::shared_ptr< State< S12, Tail... > > const& src ) {
  return State< S14, S12, Tail... >::make( S14(), src );
}

template< typename... Tail >
auto O_transition( std::shared_ptr< State< S12, Tail... > > const& src ) {
  return State< S10, S12, Tail... >::make( S10(), src );
}


template< typename... Tail >
auto I_transition( std::shared_ptr< State< S14, Tail... > > const& src ) {
  return State< S4, S14, Tail... >::make( S4(), src );
}

template< typename... Tail >
auto O_transition( std::shared_ptr< State< S14, Tail... > > const& src ) {
  return State< S21, S14, Tail... >::make( S21(), src );
}


template< typename... Tail >
auto I_transition( std::shared_ptr< State< S16, Tail... > > const& src ) {
  return State< S17, S16, Tail... >::make( S17(), src );
}

template< typename... Tail >
auto O_transition( std::shared_ptr< State< S16, Tail... > > const& src ) {
  return State< S11, S16, Tail... >::make( S11(), src );
}


template< typename... Tail >
auto I_transition( std::shared_ptr< State< S17, Tail... > > const& src ) {
  return State< S19, S17, Tail... >::make( S19(), src );
}

template< typename... Tail >
auto O_transition( std::shared_ptr< State< S17, Tail... > > const& src ) {
  return State< S16, S17, Tail... >::make( S16(), src );
}


template< typename... Tail >
auto I_transition( std::shared_ptr< State< S19, Tail... > > const& src ) {
  return State< S25, S19, Tail... >::make( S25(), src );
}

template< typename... Tail >
auto O_transition( std::shared_ptr< State< S19, Tail... > > const& src ) {
  return State< S22, S19, Tail... >::make( S22(), src );
}


template< typename... Tail >
auto I_transition( std::shared_ptr< State< S21, Tail... > > const& src ) {
  return State< S31, S21, Tail... >::make( S31(), src );
}

template< typename... Tail >
auto O_transition( std::shared_ptr< State< S21, Tail... > > const& src ) {
  return State< S28, S21, Tail... >::make( S28(), src );
}


template< typename... Tail >
auto I_transition( std::shared_ptr< State< S22, Tail... > > const& src ) {
  return State< S4, S22, Tail... >::make( S4(), src );
}

template< typename... Tail >
auto O_transition( std::shared_ptr< State< S22, Tail... > > const& src ) {
  return State< S21, S22, Tail... >::make( S21(), src );
}


template< typename... Tail >
auto I_transition( std::shared_ptr< State< S25, Tail... > > const& src ) {
  return State< S17, S25, Tail... >::make( S17(), src );
}

template< typename... Tail >
auto O_transition( std::shared_ptr< State< S25, Tail... > > const& src ) {
  return State< S11, S25, Tail... >::make( S11(), src );
}


template< typename... Tail >
auto I_transition( std::shared_ptr< State< S28, Tail... > > const& src ) {
  return State< S25, S28, Tail... >::make( S25(), src );
}

template< typename... Tail >
auto O_transition( std::shared_ptr< State< S28, Tail... > > const& src ) {
  return State< S22, S28, Tail... >::make( S22(), src );
}


template< typename... Tail >
auto I_transition( std::shared_ptr< State< S31, Tail... > > const& src ) {
  return State< S31, S31, Tail... >::make( S31(), src );
}

template< typename... Tail >
auto O_transition( std::shared_ptr< State< S31, Tail... > > const& src ) {
  return State< S28, S31, Tail... >::make( S28(), src );
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// reduces

template< typename... Tail >
auto reduce( std::shared_ptr< State< S33, S5, S2, Tail... > > const& src ) {
  std::shared_ptr< Mod0 > const& arg1 = src->head.content;
  std::shared_ptr< S > content( new RuleS0( arg1 ) );
  std::shared_ptr< State< S2, Tail... > > const& tail = src->tail->tail;
  return State< S1, S2, Tail... >::make( S1( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S34, S12, S2, Tail... > > const& src ) {
  std::shared_ptr< Mod1 > const& arg1 = src->head.content;
  std::shared_ptr< S > content( new RuleS1( arg1 ) );
  std::shared_ptr< State< S2, Tail... > > const& tail = src->tail->tail;
  return State< S1, S2, Tail... >::make( S1( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S3, Tail... > > const& src ) {
  std::shared_ptr< Mod0 > content( new Accept(  ) );
  std::shared_ptr< State< S3, Tail... > > const& tail = src;
  return State< S6, S3, Tail... >::make( S6( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S6, S3, S3, Tail... > > const& src ) {
  std::shared_ptr< Mod0 > const& arg1 = src->head.content;
  std::shared_ptr< Mod0 > content( new Rule00( arg1 ) );
  std::shared_ptr< State< S3, Tail... > > const& tail = src->tail->tail;
  return State< S6, S3, Tail... >::make( S6( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S7, S8, S3, Tail... > > const& src ) {
  std::shared_ptr< Mod1 > const& arg1 = src->head.content;
  std::shared_ptr< Mod0 > content( new Rule01( arg1 ) );
  std::shared_ptr< State< S3, Tail... > > const& tail = src->tail->tail;
  return State< S6, S3, Tail... >::make( S6( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S4, Tail... > > const& src ) {
  std::shared_ptr< Mod0 > content( new Accept(  ) );
  std::shared_ptr< State< S4, Tail... > > const& tail = src;
  return State< S23, S4, Tail... >::make( S23( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S6, S3, S4, Tail... > > const& src ) {
  std::shared_ptr< Mod0 > const& arg1 = src->head.content;
  std::shared_ptr< Mod0 > content( new Rule00( arg1 ) );
  std::shared_ptr< State< S4, Tail... > > const& tail = src->tail->tail;
  return State< S23, S4, Tail... >::make( S23( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S7, S8, S4, Tail... > > const& src ) {
  std::shared_ptr< Mod1 > const& arg1 = src->head.content;
  std::shared_ptr< Mod0 > content( new Rule01( arg1 ) );
  std::shared_ptr< State< S4, Tail... > > const& tail = src->tail->tail;
  return State< S23, S4, Tail... >::make( S23( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S5, Tail... > > const& src ) {
  std::shared_ptr< Mod0 > content( new Accept(  ) );
  std::shared_ptr< State< S5, Tail... > > const& tail = src;
  return State< S33, S5, Tail... >::make( S33( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S6, S3, S5, Tail... > > const& src ) {
  std::shared_ptr< Mod0 > const& arg1 = src->head.content;
  std::shared_ptr< Mod0 > content( new Rule00( arg1 ) );
  std::shared_ptr< State< S5, Tail... > > const& tail = src->tail->tail;
  return State< S33, S5, Tail... >::make( S33( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S7, S8, S5, Tail... > > const& src ) {
  std::shared_ptr< Mod1 > const& arg1 = src->head.content;
  std::shared_ptr< Mod0 > content( new Rule01( arg1 ) );
  std::shared_ptr< State< S5, Tail... > > const& tail = src->tail->tail;
  return State< S33, S5, Tail... >::make( S33( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S9, S10, S8, Tail... > > const& src ) {
  std::shared_ptr< Mod2 > const& arg1 = src->head.content;
  std::shared_ptr< Mod1 > content( new Rule10( arg1 ) );
  std::shared_ptr< State< S8, Tail... > > const& tail = src->tail->tail;
  return State< S7, S8, Tail... >::make( S7( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S13, S14, S8, Tail... > > const& src ) {
  std::shared_ptr< Mod3 > const& arg1 = src->head.content;
  std::shared_ptr< Mod1 > content( new Rule11( arg1 ) );
  std::shared_ptr< State< S8, Tail... > > const& tail = src->tail->tail;
  return State< S7, S8, Tail... >::make( S7( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S15, S16, S10, Tail... > > const& src ) {
  std::shared_ptr< Mod4 > const& arg1 = src->head.content;
  std::shared_ptr< Mod2 > content( new Rule20( arg1 ) );
  std::shared_ptr< State< S10, Tail... > > const& tail = src->tail->tail;
  return State< S9, S10, Tail... >::make( S9( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S18, S19, S10, Tail... > > const& src ) {
  std::shared_ptr< Mod5 > const& arg1 = src->head.content;
  std::shared_ptr< Mod2 > content( new Rule21( arg1 ) );
  std::shared_ptr< State< S10, Tail... > > const& tail = src->tail->tail;
  return State< S9, S10, Tail... >::make( S9( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S9, S10, S11, Tail... > > const& src ) {
  std::shared_ptr< Mod2 > const& arg1 = src->head.content;
  std::shared_ptr< Mod1 > content( new Rule10( arg1 ) );
  std::shared_ptr< State< S11, Tail... > > const& tail = src->tail->tail;
  return State< S24, S11, Tail... >::make( S24( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S13, S14, S11, Tail... > > const& src ) {
  std::shared_ptr< Mod3 > const& arg1 = src->head.content;
  std::shared_ptr< Mod1 > content( new Rule11( arg1 ) );
  std::shared_ptr< State< S11, Tail... > > const& tail = src->tail->tail;
  return State< S24, S11, Tail... >::make( S24( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S9, S10, S12, Tail... > > const& src ) {
  std::shared_ptr< Mod2 > const& arg1 = src->head.content;
  std::shared_ptr< Mod1 > content( new Rule10( arg1 ) );
  std::shared_ptr< State< S12, Tail... > > const& tail = src->tail->tail;
  return State< S34, S12, Tail... >::make( S34( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S13, S14, S12, Tail... > > const& src ) {
  std::shared_ptr< Mod3 > const& arg1 = src->head.content;
  std::shared_ptr< Mod1 > content( new Rule11( arg1 ) );
  std::shared_ptr< State< S12, Tail... > > const& tail = src->tail->tail;
  return State< S34, S12, Tail... >::make( S34( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S20, S21, S14, Tail... > > const& src ) {
  std::shared_ptr< Mod6 > const& arg1 = src->head.content;
  std::shared_ptr< Mod3 > content( new Rule30( arg1 ) );
  std::shared_ptr< State< S14, Tail... > > const& tail = src->tail->tail;
  return State< S13, S14, Tail... >::make( S13( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S23, S4, S14, Tail... > > const& src ) {
  std::shared_ptr< Mod0 > const& arg1 = src->head.content;
  std::shared_ptr< Mod3 > content( new Rule31( arg1 ) );
  std::shared_ptr< State< S14, Tail... > > const& tail = src->tail->tail;
  return State< S13, S14, Tail... >::make( S13( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S24, S11, S16, Tail... > > const& src ) {
  std::shared_ptr< Mod1 > const& arg1 = src->head.content;
  std::shared_ptr< Mod4 > content( new Rule40( arg1 ) );
  std::shared_ptr< State< S16, Tail... > > const& tail = src->tail->tail;
  return State< S15, S16, Tail... >::make( S15( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S26, S17, S16, Tail... > > const& src ) {
  std::shared_ptr< Mod2 > const& arg1 = src->head.content;
  std::shared_ptr< Mod4 > content( new Rule41( arg1 ) );
  std::shared_ptr< State< S16, Tail... > > const& tail = src->tail->tail;
  return State< S15, S16, Tail... >::make( S15( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S15, S16, S17, Tail... > > const& src ) {
  std::shared_ptr< Mod4 > const& arg1 = src->head.content;
  std::shared_ptr< Mod2 > content( new Rule20( arg1 ) );
  std::shared_ptr< State< S17, Tail... > > const& tail = src->tail->tail;
  return State< S26, S17, Tail... >::make( S26( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S18, S19, S17, Tail... > > const& src ) {
  std::shared_ptr< Mod5 > const& arg1 = src->head.content;
  std::shared_ptr< Mod2 > content( new Rule21( arg1 ) );
  std::shared_ptr< State< S17, Tail... > > const& tail = src->tail->tail;
  return State< S26, S17, Tail... >::make( S26( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S27, S22, S19, Tail... > > const& src ) {
  std::shared_ptr< Mod3 > const& arg1 = src->head.content;
  std::shared_ptr< Mod5 > content( new Rule50( arg1 ) );
  std::shared_ptr< State< S19, Tail... > > const& tail = src->tail->tail;
  return State< S18, S19, Tail... >::make( S18( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S29, S25, S19, Tail... > > const& src ) {
  std::shared_ptr< Mod4 > const& arg1 = src->head.content;
  std::shared_ptr< Mod5 > content( new Rule51( arg1 ) );
  std::shared_ptr< State< S19, Tail... > > const& tail = src->tail->tail;
  return State< S18, S19, Tail... >::make( S18( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S30, S28, S21, Tail... > > const& src ) {
  std::shared_ptr< Mod5 > const& arg1 = src->head.content;
  std::shared_ptr< Mod6 > content( new Rule60( arg1 ) );
  std::shared_ptr< State< S21, Tail... > > const& tail = src->tail->tail;
  return State< S20, S21, Tail... >::make( S20( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S32, S31, S21, Tail... > > const& src ) {
  std::shared_ptr< Mod6 > const& arg1 = src->head.content;
  std::shared_ptr< Mod6 > content( new Rule61( arg1 ) );
  std::shared_ptr< State< S21, Tail... > > const& tail = src->tail->tail;
  return State< S20, S21, Tail... >::make( S20( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S20, S21, S22, Tail... > > const& src ) {
  std::shared_ptr< Mod6 > const& arg1 = src->head.content;
  std::shared_ptr< Mod3 > content( new Rule30( arg1 ) );
  std::shared_ptr< State< S22, Tail... > > const& tail = src->tail->tail;
  return State< S27, S22, Tail... >::make( S27( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S23, S4, S22, Tail... > > const& src ) {
  std::shared_ptr< Mod0 > const& arg1 = src->head.content;
  std::shared_ptr< Mod3 > content( new Rule31( arg1 ) );
  std::shared_ptr< State< S22, Tail... > > const& tail = src->tail->tail;
  return State< S27, S22, Tail... >::make( S27( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S24, S11, S25, Tail... > > const& src ) {
  std::shared_ptr< Mod1 > const& arg1 = src->head.content;
  std::shared_ptr< Mod4 > content( new Rule40( arg1 ) );
  std::shared_ptr< State< S25, Tail... > > const& tail = src->tail->tail;
  return State< S29, S25, Tail... >::make( S29( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S26, S17, S25, Tail... > > const& src ) {
  std::shared_ptr< Mod2 > const& arg1 = src->head.content;
  std::shared_ptr< Mod4 > content( new Rule41( arg1 ) );
  std::shared_ptr< State< S25, Tail... > > const& tail = src->tail->tail;
  return State< S29, S25, Tail... >::make( S29( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S27, S22, S28, Tail... > > const& src ) {
  std::shared_ptr< Mod3 > const& arg1 = src->head.content;
  std::shared_ptr< Mod5 > content( new Rule50( arg1 ) );
  std::shared_ptr< State< S28, Tail... > > const& tail = src->tail->tail;
  return State< S30, S28, Tail... >::make( S30( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S29, S25, S28, Tail... > > const& src ) {
  std::shared_ptr< Mod4 > const& arg1 = src->head.content;
  std::shared_ptr< Mod5 > content( new Rule51( arg1 ) );
  std::shared_ptr< State< S28, Tail... > > const& tail = src->tail->tail;
  return State< S30, S28, Tail... >::make( S30( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S30, S28, S31, Tail... > > const& src ) {
  std::shared_ptr< Mod5 > const& arg1 = src->head.content;
  std::shared_ptr< Mod6 > content( new Rule60( arg1 ) );
  std::shared_ptr< State< S31, Tail... > > const& tail = src->tail->tail;
  return State< S32, S31, Tail... >::make( S32( content ), tail );
}

template< typename... Tail >
auto reduce( std::shared_ptr< State< S32, S31, S31, Tail... > > const& src ) {
  std::shared_ptr< Mod6 > const& arg1 = src->head.content;
  std::shared_ptr< Mod6 > content( new Rule61( arg1 ) );
  std::shared_ptr< State< S31, Tail... > > const& tail = src->tail->tail;
  return State< S32, S31, Tail... >::make( S32( content ), tail );
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

